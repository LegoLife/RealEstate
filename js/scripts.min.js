/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = require("express");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(__dirname) {﻿//'use strict';
var debug = __webpack_require__(2);
var express = __webpack_require__(0);
var path = __webpack_require__(3);
var bodyParser = __webpack_require__(4);
var routes = __webpack_require__(5);

var app = express();
//View Engine
app.set('view engine', 'ejs');
app.set('views', path.join(__dirname, 'views'));
//Routes
app.use('/', routes);
app.use(express.static(path.join(__dirname, 'public')));

app.set('port', process.env.PORT || 3000);
var port = app.get('port');


app.listen(port,
    function() {
        console.log("Server started on port: "+port);
    });
//var favicon = require('serve-favicon');
//var logger = require('morgan');
//var cookieParser = require('cookie-parser');


//
//var users = require('./routes/users');



//// view engine setup
//app.set('views', path.join(__dirname, 'views'));


//// uncomment after placing your favicon in /public
////app.use(favicon(__dirname + '/public/favicon.ico'));
//app.use(logger('dev'));
//app.use(bodyParser.json());
//app.use(bodyParser.urlencoded({ extended: false }));
//app.use(cookieParser());



//app.use('/users', users);

//// catch 404 and forward to error handler
//app.use(function (req, res, next) {
//    var err = new Error('Not Found');
//    err.status = 404;
//    next(err);
//});

//// error handlers

//// development error handler
//// will print stacktrace
//if (app.get('env') === 'development') {
//    app.use(function (err, req, res, next) {
//        res.status(err.status || 500);
//        res.render('error', {
//            message: err.message,
//            error: err
//        });
//    });
//}

//// production error handler
//// no stacktraces leaked to user
//app.use(function (err, req, res, next) {
//    res.status(err.status || 500);
//    res.render('error', {
//        message: err.message,
//        error: {}
//    });
//});



//var server = app.listen(app.get('port'), function () {
//    debug('Express server listening on port ' + server.address().port);
//});

/* WEBPACK VAR INJECTION */}.call(exports, "/"))

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = require("debug");

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = require("path");

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = require("body-parser");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
﻿
var express = __webpack_require__(0);
var router = express.Router();
var faker = __webpack_require__(6);
//var searchImages = require('pixabay-api');
var pixabay = __webpack_require__(7);
/* GET home page. */
var list = [];
pixabay.searchImages('8068846-d269499359616c95a54dd35ba', 'Home Exterior')
    .then(function (d) { getHousePhotos(d); });
var photos = [];

router.get('/', function (req, res) {
    list = getModel();
    res.render('index', {mod:list});
});

router.post('/homes/:id', function (req, res) {
    var id = req.params.id;
    var model = getHomebyId(id);
    
    res.render('popup', { mod: model });
    
});

function getModel() {
    var homeDataArr = [];
    
    for (var i = 0; i < 10; i++) {
        var price = faker.fake("{{commerce.price}}")*175;
        var mod = {
            id: i,
            City: faker.fake("{{address.city}}"),
            State: faker.fake("{{address.state}}"),
            Zip: faker.fake("{{address.zipCode}}"),
            Street: faker.fake("{{address.streetAddress}}"),
            Owner: faker.fake("{{name.firstName}} {{name.lastName}}"),
            Price: price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
            DatePosted: faker.fake("{{date.recent}}"),
            AboutLong: faker.fake("{{lorem.paragraphs}}"),
            AboutShort: faker.fake("{{lorem.sentence}}"),         
            PhotoPath: "images/home" + i + ".jpg",
            BathRooms: faker.random.number(5),
            SquareFt: faker.random.number({ min: 500, max: 3500 })
    }
        homeDataArr.push(mod);
    }
    return homeDataArr;
}
function getHomebyId(id) {
    var i = {};
    var arr = [];
    list.forEach(function(item) {
        if (item.id == id) {
            i = item;
        }
    });

    photos.hits.forEach(function (ii) {
       arr.push(ii.webformatURL);
    });
   
    i.Photos = arr;

    return i;
}
function getHousePhotos(data) {
    photos = data;
}

module.exports = router;


/***/ }),
/* 6 */
/***/ (function(module, exports) {

module.exports = require("faker");

/***/ }),
/* 7 */
/***/ (function(module, exports) {

module.exports = require("pixabay-api");

/***/ })
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAgYjdiMzJiMjY2ODZlMDVlMTRkMDAiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiZXhwcmVzc1wiIiwid2VicGFjazovLy8uL2FwcC5qcyIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJkZWJ1Z1wiIiwid2VicGFjazovLy9leHRlcm5hbCBcInBhdGhcIiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJib2R5LXBhcnNlclwiIiwid2VicGFjazovLy8uL3JvdXRlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJmYWtlclwiIiwid2VicGFjazovLy9leHRlcm5hbCBcInBpeGFiYXktYXBpXCIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBMkIsMEJBQTBCLEVBQUU7QUFDdkQseUNBQWlDLGVBQWU7QUFDaEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0EsOERBQXNELCtEQUErRDs7QUFFckg7QUFDQTs7QUFFQTtBQUNBOzs7Ozs7O0FDN0RBLG9DOzs7Ozs7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTs7OztBQUlBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLGtCQUFrQjtBQUNuRDs7OztBQUlBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsT0FBTztBQUNQOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEdBQUc7Ozs7QUFJSDtBQUNBO0FBQ0EsR0FBRzs7Ozs7Ozs7QUNuRkgsa0M7Ozs7OztBQ0FBLGlDOzs7Ozs7QUNBQSx3Qzs7Ozs7OztBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixtQkFBbUIsRUFBRTtBQUM3Qzs7QUFFQTtBQUNBO0FBQ0EseUJBQXlCLFNBQVM7QUFDbEMsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7O0FBRUEseUJBQXlCLGFBQWE7O0FBRXRDLENBQUM7O0FBRUQ7QUFDQTs7QUFFQSxtQkFBbUIsUUFBUTtBQUMzQixrQ0FBa0MsZ0JBQWdCO0FBQ2xEO0FBQ0E7QUFDQSxnQ0FBZ0MsY0FBYztBQUM5QyxpQ0FBaUMsZUFBZTtBQUNoRCwrQkFBK0IsaUJBQWlCO0FBQ2hELGtDQUFrQyx1QkFBdUI7QUFDekQsaUNBQWlDLGdCQUFnQixHQUFHLGVBQWU7QUFDbkUsc0RBQXNELEVBQUU7QUFDeEQsc0NBQXNDLGFBQWE7QUFDbkQscUNBQXFDLGtCQUFrQjtBQUN2RCxzQ0FBc0MsZ0JBQWdCO0FBQ3REO0FBQ0E7QUFDQSwyQ0FBMkMsc0JBQXNCO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBLEtBQUs7O0FBRUw7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7OztBQ3RFQSxrQzs7Ozs7O0FDQUEsd0MiLCJmaWxlIjoic2NyaXB0cy5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHtcbiBcdFx0XHRcdGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gXHRcdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuIFx0XHRcdFx0Z2V0OiBnZXR0ZXJcbiBcdFx0XHR9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAxKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrL2Jvb3RzdHJhcCBiN2IzMmIyNjY4NmUwNWUxNGQwMCIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImV4cHJlc3NcIik7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJleHByZXNzXCJcbi8vIG1vZHVsZSBpZCA9IDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwi77u/Ly8ndXNlIHN0cmljdCc7XHJcbnZhciBkZWJ1ZyA9IHJlcXVpcmUoJ2RlYnVnJyk7XHJcbnZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG52YXIgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcclxudmFyIGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpO1xyXG52YXIgcm91dGVzID0gcmVxdWlyZSgnLi9yb3V0ZXMvaW5kZXgnKTtcclxuXHJcbnZhciBhcHAgPSBleHByZXNzKCk7XHJcbi8vVmlldyBFbmdpbmVcclxuYXBwLnNldCgndmlldyBlbmdpbmUnLCAnZWpzJyk7XHJcbmFwcC5zZXQoJ3ZpZXdzJywgcGF0aC5qb2luKF9fZGlybmFtZSwgJ3ZpZXdzJykpO1xyXG4vL1JvdXRlc1xyXG5hcHAudXNlKCcvJywgcm91dGVzKTtcclxuYXBwLnVzZShleHByZXNzLnN0YXRpYyhwYXRoLmpvaW4oX19kaXJuYW1lLCAncHVibGljJykpKTtcclxuXHJcbmFwcC5zZXQoJ3BvcnQnLCBwcm9jZXNzLmVudi5QT1JUIHx8IDMwMDApO1xyXG52YXIgcG9ydCA9IGFwcC5nZXQoJ3BvcnQnKTtcclxuXHJcblxyXG5hcHAubGlzdGVuKHBvcnQsXHJcbiAgICBmdW5jdGlvbigpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIlNlcnZlciBzdGFydGVkIG9uIHBvcnQ6IFwiK3BvcnQpO1xyXG4gICAgfSk7XHJcbi8vdmFyIGZhdmljb24gPSByZXF1aXJlKCdzZXJ2ZS1mYXZpY29uJyk7XHJcbi8vdmFyIGxvZ2dlciA9IHJlcXVpcmUoJ21vcmdhbicpO1xyXG4vL3ZhciBjb29raWVQYXJzZXIgPSByZXF1aXJlKCdjb29raWUtcGFyc2VyJyk7XHJcblxyXG5cclxuLy9cclxuLy92YXIgdXNlcnMgPSByZXF1aXJlKCcuL3JvdXRlcy91c2VycycpO1xyXG5cclxuXHJcblxyXG4vLy8vIHZpZXcgZW5naW5lIHNldHVwXHJcbi8vYXBwLnNldCgndmlld3MnLCBwYXRoLmpvaW4oX19kaXJuYW1lLCAndmlld3MnKSk7XHJcblxyXG5cclxuLy8vLyB1bmNvbW1lbnQgYWZ0ZXIgcGxhY2luZyB5b3VyIGZhdmljb24gaW4gL3B1YmxpY1xyXG4vLy8vYXBwLnVzZShmYXZpY29uKF9fZGlybmFtZSArICcvcHVibGljL2Zhdmljb24uaWNvJykpO1xyXG4vL2FwcC51c2UobG9nZ2VyKCdkZXYnKSk7XHJcbi8vYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XHJcbi8vYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogZmFsc2UgfSkpO1xyXG4vL2FwcC51c2UoY29va2llUGFyc2VyKCkpO1xyXG5cclxuXHJcblxyXG4vL2FwcC51c2UoJy91c2VycycsIHVzZXJzKTtcclxuXHJcbi8vLy8gY2F0Y2ggNDA0IGFuZCBmb3J3YXJkIHRvIGVycm9yIGhhbmRsZXJcclxuLy9hcHAudXNlKGZ1bmN0aW9uIChyZXEsIHJlcywgbmV4dCkge1xyXG4vLyAgICB2YXIgZXJyID0gbmV3IEVycm9yKCdOb3QgRm91bmQnKTtcclxuLy8gICAgZXJyLnN0YXR1cyA9IDQwNDtcclxuLy8gICAgbmV4dChlcnIpO1xyXG4vL30pO1xyXG5cclxuLy8vLyBlcnJvciBoYW5kbGVyc1xyXG5cclxuLy8vLyBkZXZlbG9wbWVudCBlcnJvciBoYW5kbGVyXHJcbi8vLy8gd2lsbCBwcmludCBzdGFja3RyYWNlXHJcbi8vaWYgKGFwcC5nZXQoJ2VudicpID09PSAnZGV2ZWxvcG1lbnQnKSB7XHJcbi8vICAgIGFwcC51c2UoZnVuY3Rpb24gKGVyciwgcmVxLCByZXMsIG5leHQpIHtcclxuLy8gICAgICAgIHJlcy5zdGF0dXMoZXJyLnN0YXR1cyB8fCA1MDApO1xyXG4vLyAgICAgICAgcmVzLnJlbmRlcignZXJyb3InLCB7XHJcbi8vICAgICAgICAgICAgbWVzc2FnZTogZXJyLm1lc3NhZ2UsXHJcbi8vICAgICAgICAgICAgZXJyb3I6IGVyclxyXG4vLyAgICAgICAgfSk7XHJcbi8vICAgIH0pO1xyXG4vL31cclxuXHJcbi8vLy8gcHJvZHVjdGlvbiBlcnJvciBoYW5kbGVyXHJcbi8vLy8gbm8gc3RhY2t0cmFjZXMgbGVha2VkIHRvIHVzZXJcclxuLy9hcHAudXNlKGZ1bmN0aW9uIChlcnIsIHJlcSwgcmVzLCBuZXh0KSB7XHJcbi8vICAgIHJlcy5zdGF0dXMoZXJyLnN0YXR1cyB8fCA1MDApO1xyXG4vLyAgICByZXMucmVuZGVyKCdlcnJvcicsIHtcclxuLy8gICAgICAgIG1lc3NhZ2U6IGVyci5tZXNzYWdlLFxyXG4vLyAgICAgICAgZXJyb3I6IHt9XHJcbi8vICAgIH0pO1xyXG4vL30pO1xyXG5cclxuXHJcblxyXG4vL3ZhciBzZXJ2ZXIgPSBhcHAubGlzdGVuKGFwcC5nZXQoJ3BvcnQnKSwgZnVuY3Rpb24gKCkge1xyXG4vLyAgICBkZWJ1ZygnRXhwcmVzcyBzZXJ2ZXIgbGlzdGVuaW5nIG9uIHBvcnQgJyArIHNlcnZlci5hZGRyZXNzKCkucG9ydCk7XHJcbi8vfSk7XHJcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vYXBwLmpzXG4vLyBtb2R1bGUgaWQgPSAxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImRlYnVnXCIpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIGV4dGVybmFsIFwiZGVidWdcIlxuLy8gbW9kdWxlIGlkID0gMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJwYXRoXCIpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIGV4dGVybmFsIFwicGF0aFwiXG4vLyBtb2R1bGUgaWQgPSAzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImJvZHktcGFyc2VyXCIpO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIGV4dGVybmFsIFwiYm9keS1wYXJzZXJcIlxuLy8gbW9kdWxlIGlkID0gNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCLvu78ndXNlIHN0cmljdCc7XHJcbnZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG52YXIgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcclxudmFyIGZha2VyID0gcmVxdWlyZSgnZmFrZXInKTtcclxuLy92YXIgc2VhcmNoSW1hZ2VzID0gcmVxdWlyZSgncGl4YWJheS1hcGknKTtcclxudmFyIHBpeGFiYXkgPSByZXF1aXJlKCdwaXhhYmF5LWFwaScpO1xyXG4vKiBHRVQgaG9tZSBwYWdlLiAqL1xyXG52YXIgbGlzdCA9IFtdO1xyXG5waXhhYmF5LnNlYXJjaEltYWdlcygnODA2ODg0Ni1kMjY5NDk5MzU5NjE2Yzk1YTU0ZGQzNWJhJywgJ0hvbWUgRXh0ZXJpb3InKVxyXG4gICAgLnRoZW4oZnVuY3Rpb24gKGQpIHsgZ2V0SG91c2VQaG90b3MoZCk7IH0pO1xyXG52YXIgcGhvdG9zID0gW107XHJcblxyXG5yb3V0ZXIuZ2V0KCcvJywgZnVuY3Rpb24gKHJlcSwgcmVzKSB7XHJcbiAgICBsaXN0ID0gZ2V0TW9kZWwoKTtcclxuICAgIHJlcy5yZW5kZXIoJ2luZGV4Jywge21vZDpsaXN0fSk7XHJcbn0pO1xyXG5cclxucm91dGVyLnBvc3QoJy9ob21lcy86aWQnLCBmdW5jdGlvbiAocmVxLCByZXMpIHtcclxuICAgIHZhciBpZCA9IHJlcS5wYXJhbXMuaWQ7XHJcbiAgICB2YXIgbW9kZWwgPSBnZXRIb21lYnlJZChpZCk7XHJcbiAgICBcclxuICAgIHJlcy5yZW5kZXIoJ3BvcHVwJywgeyBtb2Q6IG1vZGVsIH0pO1xyXG4gICAgXHJcbn0pO1xyXG5cclxuZnVuY3Rpb24gZ2V0TW9kZWwoKSB7XHJcbiAgICB2YXIgaG9tZURhdGFBcnIgPSBbXTtcclxuICAgIFxyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XHJcbiAgICAgICAgdmFyIHByaWNlID0gZmFrZXIuZmFrZShcInt7Y29tbWVyY2UucHJpY2V9fVwiKSoxNzU7XHJcbiAgICAgICAgdmFyIG1vZCA9IHtcclxuICAgICAgICAgICAgaWQ6IGksXHJcbiAgICAgICAgICAgIENpdHk6IGZha2VyLmZha2UoXCJ7e2FkZHJlc3MuY2l0eX19XCIpLFxyXG4gICAgICAgICAgICBTdGF0ZTogZmFrZXIuZmFrZShcInt7YWRkcmVzcy5zdGF0ZX19XCIpLFxyXG4gICAgICAgICAgICBaaXA6IGZha2VyLmZha2UoXCJ7e2FkZHJlc3MuemlwQ29kZX19XCIpLFxyXG4gICAgICAgICAgICBTdHJlZXQ6IGZha2VyLmZha2UoXCJ7e2FkZHJlc3Muc3RyZWV0QWRkcmVzc319XCIpLFxyXG4gICAgICAgICAgICBPd25lcjogZmFrZXIuZmFrZShcInt7bmFtZS5maXJzdE5hbWV9fSB7e25hbWUubGFzdE5hbWV9fVwiKSxcclxuICAgICAgICAgICAgUHJpY2U6IHByaWNlLnRvU3RyaW5nKCkucmVwbGFjZSgvXFxCKD89KFxcZHszfSkrKD8hXFxkKSkvZywgXCIsXCIpLFxyXG4gICAgICAgICAgICBEYXRlUG9zdGVkOiBmYWtlci5mYWtlKFwie3tkYXRlLnJlY2VudH19XCIpLFxyXG4gICAgICAgICAgICBBYm91dExvbmc6IGZha2VyLmZha2UoXCJ7e2xvcmVtLnBhcmFncmFwaHN9fVwiKSxcclxuICAgICAgICAgICAgQWJvdXRTaG9ydDogZmFrZXIuZmFrZShcInt7bG9yZW0uc2VudGVuY2V9fVwiKSwgICAgICAgICBcclxuICAgICAgICAgICAgUGhvdG9QYXRoOiBcImltYWdlcy9ob21lXCIgKyBpICsgXCIuanBnXCIsXHJcbiAgICAgICAgICAgIEJhdGhSb29tczogZmFrZXIucmFuZG9tLm51bWJlcig1KSxcclxuICAgICAgICAgICAgU3F1YXJlRnQ6IGZha2VyLnJhbmRvbS5udW1iZXIoeyBtaW46IDUwMCwgbWF4OiAzNTAwIH0pXHJcbiAgICB9XHJcbiAgICAgICAgaG9tZURhdGFBcnIucHVzaChtb2QpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGhvbWVEYXRhQXJyO1xyXG59XHJcbmZ1bmN0aW9uIGdldEhvbWVieUlkKGlkKSB7XHJcbiAgICB2YXIgaSA9IHt9O1xyXG4gICAgdmFyIGFyciA9IFtdO1xyXG4gICAgbGlzdC5mb3JFYWNoKGZ1bmN0aW9uKGl0ZW0pIHtcclxuICAgICAgICBpZiAoaXRlbS5pZCA9PSBpZCkge1xyXG4gICAgICAgICAgICBpID0gaXRlbTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICBwaG90b3MuaGl0cy5mb3JFYWNoKGZ1bmN0aW9uIChpaSkge1xyXG4gICAgICAgYXJyLnB1c2goaWkud2ViZm9ybWF0VVJMKTtcclxuICAgIH0pO1xyXG4gICBcclxuICAgIGkuUGhvdG9zID0gYXJyO1xyXG5cclxuICAgIHJldHVybiBpO1xyXG59XHJcbmZ1bmN0aW9uIGdldEhvdXNlUGhvdG9zKGRhdGEpIHtcclxuICAgIHBob3RvcyA9IGRhdGE7XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xyXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3JvdXRlcy9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJmYWtlclwiKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCBcImZha2VyXCJcbi8vIG1vZHVsZSBpZCA9IDZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicGl4YWJheS1hcGlcIik7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwgXCJwaXhhYmF5LWFwaVwiXG4vLyBtb2R1bGUgaWQgPSA3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=